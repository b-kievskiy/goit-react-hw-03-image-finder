{"version":3,"sources":["Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","Modal/Modal.js","ImageGallery/ImageGallery.js","Button/Button.js","Loader/Loader.js","App.js","index.js"],"names":["Searchbar","state","search","onChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","prev","this","className","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webFormatURL","largeImageURL","src","alt","data-src","Modal","url","modalClick","onClick","propType","PropTypes","string","isRequired","ImageGallery","isModal","openModal","closeModal","handleKeyPress","code","itemClick","nodeName","clickedSrc","dataset","currentTarget","window","addEventListener","removeEventListener","imageArray","map","id","webformatURL","key","Button","btnClick","PreLoader","color","height","width","timeout","App","imagesList","query","page","isLoading","prevState","scrollDown","scrollTo","top","document","body","scrollHeight","behavior","getImages","prevProps","reqest","fetch","then","respons","json","results","hits","data","catch","error","console","log","finally","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.260bb2a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Searchbar extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState(prev => (this.state.search = ''));\r\n  };\r\n\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            name=\"search\"\r\n            value={search}\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.onChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ webFormatURL, largeImageURL }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webFormatURL}\r\n        alt=\"\"\r\n        data-src={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webFormatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ url, modalClick }) {\r\n  return (\r\n    <div className=\"Overlay\" onClick={modalClick}>\r\n      <div className=\"Modal\">\r\n        <img src={url} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propType = {\r\n  url: PropTypes.string.isRequired,\r\n  onClick: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    isModal: false,\r\n    src: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keypdown', this.handleKeyPress);\r\n  }\r\n\r\n  openModal = () => this.setState({ isModal: true });\r\n  closeModal = () => this.setState({ isModal: false });\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') {\r\n      return;\r\n    }\r\n    this.closeModal();\r\n  };\r\n\r\n  itemClick = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      return;\r\n    } else {\r\n      const clickedSrc = e.target.dataset.src;\r\n      this.setState({ src: clickedSrc });\r\n      this.openModal();\r\n    }\r\n  };\r\n\r\n  modalClick = e => {\r\n    if (e.currentTarget.nodeName !== 'DIV' || e.target.nodeName !== 'IMG') {\r\n      this.closeModal();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { imageArray } = this.props;\r\n    const { isModal, src } = this.state;\r\n    return (\r\n      <>\r\n        {isModal ? (\r\n          <Modal url={src} modalClick={this.modalClick} />\r\n        ) : (\r\n          <ul className=\"ImageGallery\" onClick={this.itemClick}>\r\n            {imageArray.map(({ id, webformatURL, largeImageURL }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                webFormatURL={webformatURL}\r\n                largeImageURL={largeImageURL}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  imageArray: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ btnClick }) {\r\n  return (\r\n    <button className=\"Button\" onClick={btnClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  btnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#25dfdf\"\r\n      height={640}\r\n      width={640}\r\n      timeout={3000} //3 secs\r\n      className=\"loader\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","import React, { Component } from 'react';\nimport { Searchbar } from './Searchbar/Searchbar';\nimport { ImageGallery } from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport PreLoader from './Loader/Loader';\n\nconst key = '16012564-983777c468f78516fc9320c6b';\n\nexport class App extends Component {\n  state = {\n    imagesList: [],\n    query: 'grass',\n    page: 1,\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    this.getImages();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.query !== this.state.query ||\n      prevState.page !== this.state.page\n    ) {\n      this.getImages();\n    }\n  }\n\n  onSubmit = search => {\n    this.setState({ query: search, page: 1, imagesList: [] });\n  };\n\n  getImages() {\n    const { query, page } = this.state;\n    const reqest = `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`;\n    this.setState({ isLoading: true });\n    fetch(reqest)\n      .then(respons => respons.json())\n      .then(results =>\n        results.hits.map(({ id, webformatURL, largeImageURL }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n        })),\n      )\n      .then(data => {\n        this.setState(prev => ({ imagesList: [...prev.imagesList, ...data] }));\n        return data;\n      })\n      .then(data => this.scrollDown())\n      .catch(error => console.log('Error = ', error))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  btnClick = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n\n  scrollDown = () => {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  render() {\n    const { imagesList, isLoading } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        <ImageGallery imageArray={imagesList} />\n        {isLoading && <PreLoader />}\n        <Button btnClick={this.btnClick} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/main.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}